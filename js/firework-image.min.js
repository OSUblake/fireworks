class FireworkImage extends DisplayObject{constructor(fireworks,image){super(fireworks),this.origImage=image,this.texture=image,this.imageData=[0,0,0,0],this.isValid=!1,this.isVideo=image instanceof HTMLMediaElement,this.baseWidth=image.naturalWidth||image.videoWidth||image.width,this.baseHeight=image.naturalHeight||image.videoHeight||image.height;const maxSize=this.fireworks.maxImageSize;let ratio=1;this.baseWidth>maxSize?ratio=maxSize/this.baseWidth:this.baseHeight>maxSize&&(ratio=maxSize/this.baseHeight),this.width=Math.floor(this.baseWidth*ratio),this.height=Math.floor(this.baseHeight*ratio),this.originX=this.width/2,this.originY=this.height/2}init(){const texture=this.texture;return new Promise(resolve=>{if(!texture)return console.log("*** FIREWORKS: Invalid Texture"),resolve();if(this.isVideo){const fulfill=()=>{texture.removeEventListener("timeupdate",fulfill),this.resizeImage(),resolve()};texture.addEventListener("timeupdate",fulfill),texture.currentTime=.5*texture.duration}else this.resizeImage(),resolve()})}resizeImage(){const image=this.texture,canvas=document.createElement("canvas"),ctx=canvas.getContext("2d");canvas.width=this.width,canvas.height=this.height,ctx.drawImage(image,0,0,this.baseWidth,this.baseHeight,0,0,this.width,this.height),this.imageData=ctx.getImageData(0,0,canvas.width,canvas.height).data}play(){this.isVideo&&(this.texture.currentTime=0,this.texture.play())}pause(){this.isVideo&&this.texture.pause()}getColor(x=0,y=0){const i=4*(y*this.width+x);return this.imageData[i]?{r:this.imageData[i],g:this.imageData[i+1],b:this.imageData[i+2],a:this.imageData[i+3]/255}:{r:0,g:0,b:0,a:0}}render(){const ctx=this.fireworks.ctx;this.setTransform(),ctx.globalAlpha=1,ctx.drawImage(this.texture,0,0,this.baseWidth,this.baseHeight,0,0,this.width,this.height)}}