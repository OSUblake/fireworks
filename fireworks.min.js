class Fireworks{constructor(settings){Object.assign(this,settings),this.canPlay=!1,this.render=this.render.bind(this),this.ctx=this.canvas.getContext("2d"),this.dpr=window.devicePixelRatio,this.fireworksTimeline=gsap.timeline({paused:!0}),this.trailParticles=[],this.shapeTextures=new ShapeTextures(this),this.colors.forEach(color=>this.shapeTextures.addColor(color)),this.randomColor=gsap.utils.random(this.colors,!0),this.randomShape=gsap.utils.random(["triangle","rect"],!0),this.images=this.images.filter(img=>img instanceof HTMLElement&&(img.naturalWidth||img.videoWidth||img.width)),this.images.length?this.prepare():this.fireReady()}prepare(){const firstImage=this.images.shift();this.images=[firstImage,...gsap.utils.shuffle(this.images)].slice(0,this.maxFireworks),this.emitters=this.images.map((img,i)=>new FireworkEmitter(this,img)),this.onResize(),this.createVars(),this.mainExplodeY=-(this.height-this.mainExplodeY),window.addEventListener("resize",e=>this.onResize()),Promise.all(this.emitters.map(emitter=>emitter.prepare())).then(res=>{this.init(),this.shapeTextures.generate(),this.fireReady()})}init(){this.canPlay=!0;const{cx:cx,mainExplodeY:mainExplodeY}=this,minRotation=80,maxRotation=120,spread=200,size=this.maxImageSize,spawnWidth=Math.min(this.spawnWidth,this.width)/2;let spawnSide=1;const randomX=gsap.utils.random(100,spawnWidth,!0),randomY=gsap.utils.random(mainExplodeY-200,mainExplodeY+200,!0),randomRotation=gsap.utils.random(80*RAD,120*RAD,!0),randomDelay=gsap.utils.random(.1,.5,!0),randomDrop=gsap.utils.random(50,80,!0);this.emitters.forEach((emitter,index)=>{const isMain=!index,sign=randomChoice(1,-1),duration=1,drop=randomDrop();let delay,peakY,explodeY;isMain?(peakY=mainExplodeY-drop,explodeY=mainExplodeY,delay=0):(peakY=randomY(),explodeY=peakY+drop,delay=randomDelay()),emitter.rotationSign=sign,emitter.x=isMain?cx:cx+randomX()*spawnSide,emitter.y=this.height,spawnSide*=-1;const tl=gsap.timeline({paused:!0}).to(emitter,{duration:2,ease:"none",rotation:"+="+randomRotation()*sign},0).to(emitter,{duration:1,ease:"sine.out",y:peakY},0).to(emitter,{duration:1,ease:"sine.in",y:0},">");tl.time(1,!0);let explodeTime=0;for(let i=0;i<=1;i+=.01){const currentTime=1+1*i;if(tl.time(currentTime,!0),emitter.y>explodeY){emitter.init(),explodeTime=currentTime;break}}tl.progress(0,!0);const progress=explodeTime/tl.duration(),tweener=gsap.to(tl,{duration:this.explodeTime,progress:progress,ease:"none",onStart:()=>{emitter.play()},onComplete:()=>{tl.kill(),emitter.explode(),this.popSound.play()}});this.createTrailParticles({emitter:emitter,startY:emitter.y,endY:explodeY,isMain:isMain,delay:delay}),this.fireworksTimeline.add(tweener,delay)})}createTrailParticles(settings){const{delay:delay,emitter:emitter,endY:endY,isMain:isMain}=settings,{randomColor:randomColor,shapeTextures:shapeTextures}=this,minRotation=360,maxRotation=720,imageSize=Math.min(emitter.image.width,emitter.image.height),maxOffsetX=Math.min(10,imageSize/2),randomDelay=gsap.utils.random(0,.5,!0),randomDrop=gsap.utils.random(100,150,!0),randomOffsetX=gsap.utils.random(50,maxOffsetX,!0),randomOffsetY=gsap.utils.random(.2*endY,.5*endY,!0),randomRotation=gsap.utils.random(360*RAD,720*RAD,!0),size=gsap.utils.mapRange(this.minImageSizeSlider,this.maxImageSizeSlider,this.minTrailParticleSize,this.maxTrailParticleSize,imageSize),scale=size/this.particleSize,count=isMain?gsap.utils.random(6,9,1):gsap.utils.random(2,3,1);for(let i=0;i<count;i++){const color=randomColor(),x=emitter.x+randomOffsetX()*randomChoice(1,-1),shape=this.randomShape(),sign=randomChoice(1,-1),offsetY=randomOffsetY(),startY=emitter.y+offsetY,peakY=endY-offsetY,fadeY=peakY+randomDrop(),particle=new FireworkParticle(this,{color:color,scaleX:scale,scaleY:scale,frame:shapeTextures.getFrame(color,shape),x:x,y:startY,rotation:Math.random()*Math.PI}),duration=1,tl=gsap.timeline({paused:!0}).to(particle,{duration:duration,y:peakY,ease:"sine.out"}).to(particle,{duration:duration,y:0,ease:"sine.in"}).to(particle,{duration:2*duration,rotation:"+="+randomRotation()*sign,ease:"power3.in"},0);let endTime=0;for(let i=0;i<=1;i+=.01){const currentTime=duration+duration*i;if(tl.time(currentTime,!0),particle.y>fadeY){endTime=currentTime;break}}const timeDifference=endTime-duration;tl.to(particle,{ease:"power3.in",duration:2*timeDifference,scaleX:0,scaleY:0},duration-timeDifference),tl.progress(0,!0);const progress=endTime/tl.duration(),minDuration=this.explodeTime+.1,maxDuration=minDuration+.3,tweenerDuration=gsap.utils.random(minDuration,maxDuration),tweener=gsap.timeline({onStart:()=>{particle.alive=!0},onComplete:()=>{particle.alive=!1,tl.kill()}}).to(tl,{duration:tweenerDuration,progress:progress,ease:"none"});this.fireworksTimeline.add(tweener,delay),this.trailParticles.push(particle)}}createVars(){this.particleVars={startAlpha:gsap.utils.random(.5,1,!0),scale:gsap.utils.random(.5,1,!0),duration:gsap.utils.random(1,2,!0),friction:gsap.utils.random(.1,.3,!0),gravity:400,rotation:gsap.utils.random(45*RAD,90*RAD,!0),spread:60,skew:gsap.utils.random(-45*RAD,45*RAD,!0),velocity:gsap.utils.random(800,1100,!0)}}onResize(){this.width=this.canvas.clientWidth,this.height=this.canvas.clientHeight,this.cx=this.width/2,this.cy=this.height/2,this.canvas.width=this.width*this.dpr,this.canvas.height=this.height*this.dpr,this.offsetY=this.height,this.ctx.setTransform(this.dpr,0,0,this.dpr,0,0)}play(){this.canPlay?(this.fireworksTimeline.play(),gsap.ticker.add(this.render)):console.log("*** Fireworks can't play")}kill(){gsap.ticker.remove(this.render)}fireReady(){this.onReady&&this.onReady.call(this,this)}render(){const{ctx:ctx,emitters:emitters,width:width,height:height,trailParticles:trailParticles}=this;let aliveCount=0,i=0;for(this.ctx.setTransform(this.dpr,0,0,this.dpr,0,0),ctx.clearRect(0,0,width,height),ctx.globalAlpha=1,ctx.imageSmoothingEnabled=!1,i=0;i<trailParticles.length;i++){const particle=trailParticles[i];particle.alive&&(particle.render(),aliveCount++)}for(ctx.imageSmoothingEnabled=!0,i=0;i<emitters.length;i++)emitters[i].update(),aliveCount+=emitters[i].aliveCount;aliveCount||this.kill()}}